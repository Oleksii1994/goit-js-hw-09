{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAEtCF,EAAOG,iBAAiB,UAAU,SAAAC,GAChCA,EAAMC,iBAEN,IAAMC,EAAaC,OAAOP,EAAOQ,MAAMC,OACjCC,EAAYH,OAAOP,EAAOW,KAAKF,OAC/BG,EAAcL,OAAOP,EAAOa,OAAOJ,OAEzC,SAASK,EAAcC,EAAUP,GAC/B,OAAO,IAAIQ,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUP,UAEpBU,EAAO,CAAEH,WAAUP,S,GAEpBA,E,IAIP,IAAK,IAAIe,EAAI,EAAGA,EAAIX,EAAaW,GAAK,EAAG,CAIvCT,EAHiBS,EACIjB,EAAaiB,EAAIb,GAGnCc,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUP,EAAKiB,EAALjB,MACjBV,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANpB,EAAM,M,IAE9DqB,OAAM,SAAAJ,G,IAAGV,EAAQU,EAARV,SAAUP,EAAKiB,EAALjB,MAClBV,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAfb,EAAS,QAAYa,OAANpB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delayValue = Number(formEl.delay.value);\n  const stepValue = Number(formEl.step.value);\n  const amountValue = Number(formEl.amount.value);\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  for (let i = 0; i < amountValue; i += 1) {\n    const position = i;\n    const promiseDelay = delayValue + i * stepValue;\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","event","preventDefault","delayValue","Number","delay","value","stepValue","step","amountValue","amount","createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.89193439.js.map"}